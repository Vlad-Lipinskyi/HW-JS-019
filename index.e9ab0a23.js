const e=document.querySelector(".movies-list"),t=t=>{let a=t.map(e=>`<li class="movies-item" id="${e.id}">
            <h2 class="movies-name">${e.title}</h2>
            <p class="movies-genre">${e.genre}</p>
            <p class="movies-director">${e.director}</p>
            <p class="movies-year">${e.year}</p>
             <div class="container">
            <button class="delete-btn" type="button">delete</button>
            <button class="edit-btn" type="button">edit</button>
            <button class="edit-part-btn">part change</button>
             </div>
        </li>`).join("");e.insertAdjacentHTML("beforeend",a)},a=async(e,t)=>{let a={method:"PUT",body:JSON.stringify(e),headers:{"Content-Type":"application/json; charset=UTF-8"}};try{let e=await fetch(`http://localhost:3000/movies/${t}`,a);return await e.json()}catch(e){console.log(e)}},l=()=>{let e;let t=document.querySelector(".backdrop-edit"),l=document.querySelectorAll(".edit-btn"),n=document.querySelector(".edit-form-data");l.forEach(a=>{a.addEventListener("click",a=>{t.classList.remove("is-hidden"),e=a.target.parentElement.parentElement.id})}),n.addEventListener("submit",async l=>{l.preventDefault(),t.classList.add("is-hidden");let o={title:`${n.elements.name.value}`,genre:`${n.elements.genre.value}`,director:`${n.elements.director.value}`,year:`${n.elements.year.value}`};try{await a(o,e)}catch(e){console.log(e)}}),document.querySelector(".close-edit-modal").addEventListener("click",()=>{t.classList.add("is-hidden")})},n=async(e,t)=>{console.log(e);let a={method:"PATCH",body:JSON.stringify(e),headers:{"Content-Type":"application/json; charset=UTF-8"}};try{let e=await fetch(`http://localhost:3000/movies/${t}`,a),l=await e.json();console.log(l)}catch(e){console.log(e)}},o=()=>{let e;let t=document.querySelector(".backdrop-edit-part"),a=document.querySelectorAll(".edit-part-btn"),l=document.querySelector(".edit-part-form-data");a.forEach(a=>{a.addEventListener("click",a=>{t.classList.remove("is-hidden"),e=a.target.parentElement.parentElement.id})}),l.addEventListener("submit",async a=>{a.preventDefault(),t.classList.add("is-hidden");let o={};""!==l.elements.name.value&&(o.title=`${l.elements.name.value}`,l.elements.name.value=""),""!==l.elements.genre.value&&(o.genre=`${l.elements.genre.value}`,l.elements.genre.value=""),""!==l.elements.director.value&&(o.director=`${l.elements.director.value}`,l.elements.director.value=""),""!==l.elements.year.value&&(o.year=`${l.elements.year.value}`,l.elements.year.value="");try{await n(o,e)}catch(e){console.log(e)}}),document.querySelector(".close-edit-part-modal").addEventListener("click",()=>{t.classList.add("is-hidden")})},s=async e=>{try{return await fetch(`http://localhost:3000/movies/${e}`,{method:"DELETE"})}catch(e){console.log(e)}},c=()=>{document.querySelectorAll(".delete-btn").forEach(e=>{e.addEventListener("click",async()=>{try{await s(e.parentElement.parentElement.id)}catch(e){console.log(e)}})})},r=async()=>{try{let e=await fetch("http://localhost:3000/movies"),a=await e.json();t(a),l(),o(),c()}catch(e){console.log(e)}},d=async e=>{let t={method:"POST",body:JSON.stringify(e),headers:{"Content-Type":"application/json; charset=UTF-8"}};try{let e=await fetch("http://localhost:3000/movies",t);return await e.json()}catch(e){console.log(e)}},i=document.querySelector(".form-data"),m=document.querySelector(".backdrop-add");i.addEventListener("submit",async e=>{e.preventDefault(),m.classList.add("is-hidden");let t={title:`${i.elements.name.value}`,genre:`${i.elements.genre.value}`,director:`${i.elements.director.value}`,year:`${i.elements.year.value}`};try{await d(t)}catch(e){console.log(e)}});const u=document.querySelector(".backdrop-add"),y=document.querySelector(".add-movie"),v=document.querySelector(".close-modal");y.addEventListener("click",e=>{e.preventDefault(),u.classList.remove("is-hidden")}),v.addEventListener("click",e=>{e.preventDefault(),u.classList.add("is-hidden")}),r();
//# sourceMappingURL=index.e9ab0a23.js.map
